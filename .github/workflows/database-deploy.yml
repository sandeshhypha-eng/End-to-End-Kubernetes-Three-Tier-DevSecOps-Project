name: Database - Deploy MongoDB

on:
  push:
    paths:
      - 'Kubernetes-Manifests-file/Database/**'
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Optional target (defaults to all)'
        required: false
        default: ''

jobs:
  deploy-db:
    name: Deploy MongoDB manifests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.27.3'

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Ensure namespace exists
        run: |
          kubectl get namespace three-tier >/dev/null 2>&1 || kubectl create namespace three-tier

      - name: Set kubectl context namespace
        run: |
          kubectl config set-context --current --namespace=three-tier

      - name: Apply PV, PVC, Secrets, Service, Deployment (in order)
        run: |
          set -euo pipefail
          BASE=Kubernetes-Manifests-file/Database
          echo "Applying PV"
          kubectl apply -f ${BASE}/pv.yaml || true
          echo "Applying PVC"
          kubectl apply -f ${BASE}/pvc.yaml
          echo "Applying Secrets"
          kubectl apply -f ${BASE}/secrets.yaml
          echo "Applying Service"
          kubectl apply -f ${BASE}/service.yaml
          echo "Applying Deployment"
          kubectl apply -f ${BASE}/deployment.yaml

      - name: Wait for PVC to be Bound
        run: |
          # wait for the persistent volume claim used by mongodb
          kubectl -n three-tier wait --for=condition=bound pvc/mongo-volume-claim --timeout=2m || true

      - name: Wait for mongodb rollout
        run: |
          kubectl -n three-tier rollout status deployment/mongodb --timeout=3m || (
            echo "Deployment rollout failed or timed out; fetching events" &&
            kubectl -n three-tier get pods -l app=mongodb -o wide &&
            kubectl -n three-tier describe deployment mongodb &&
            kubectl -n three-tier get events --sort-by='.lastTimestamp' &&
            exit 1
          )

# Required secrets: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_REGION, EKS_CLUSTER_NAME
